{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;AAOO,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,MAAM,CAAC;KAChB;;wEAFY,YAAY;0GAAZ,YAAY;QCPzB,yEAAiB;QACb,yEAAmB;QACf,qEAAI;QAAA,uDAAS;QAAA,4DAAK;QAClB,wEAAyB;QAC7B,4DAAM;QACV,yEAAmB;QAChB,kEAAa;QAChB,4DAAM;QACN,4DAAM;;QANM,0DAAS;QAAT,0EAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDqC;AAEX;AACE;AACW;AACL;AACX;AACW;AACW;AACP;AACK;AACH;AACN;AACE;AACK;AACc;AAClB;AACqB;;AA4BxE,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GADb,CAAC,0DAAK,CAAC,YAfT;YACL,oEAAa;YACb,kEAAgB;YAChB,uDAAW;YACX,+DAAmB;YACnB,iEAAS;YACT,sEAAe;YACf,2EAAiB;YACjB,wEAAgB;YAChB,kEAAa;YACb,oEAAc;YACd,0EAAiB;YACjB,sEAAe;YACf,0FAAuB;SAC1B;mIAIU,SAAS,mBAvBd,wDAAY;QACZ,sEAAa;QACb,qDAAQ;QACR,qFAAuB,aAGzB,oEAAa;QACb,kEAAgB;QAChB,uDAAW;QACX,+DAAmB;QACnB,iEAAS;QACT,sEAAe;QACf,2EAAiB;QACjB,wEAAgB;QAChB,kEAAa;QACb,oEAAc;QACd,0EAAiB;QACjB,sEAAe;QACf,0FAAuB;;;;;;;;;;;;;;;;;;;ACtCQ;AACc;;;AAI5C,MAAM,KAAK;IACd,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAGpC,2DAA2D;QAC3D,kDAAkD;QAC3C,WAAM,GAAY,EAAE,CAAC;QACrB,UAAK,GAAU,IAAI,gDAAK,EAAE,CAAC;IAJlC,CAAC;IAMD,UAAU;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAK,YAAY,CAAC;aACjC,IAAI,CAAC,mDAAG,CAAC,IAAI,CAAC,EAAE;YACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,OAAO;QACX,CAAC,CAAC,CAAC,CAAC;IAER,CAAC;IAED,UAAU,CAAC,KAAY;QAEnB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC;QACzD,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;aAAM;YACH,MAAM,OAAO,GAAG,IAAI,oDAAS,EAAE,CAAC;YAChC,OAAO,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;YACtB,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YAC5B,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;YAClC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YAC5B,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;YACrB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAClC;IAGL,CAAC;;0DAlCQ,KAAK;sGAAL,KAAK,WAAL,KAAK;;;;;;;;;;;;;;;;ACRX,MAAM,SAAS;CAOrB;AAEM,MAAM,KAAK;IAAlB;QAII,UAAK,GAAgB,EAAE,CAAC;IAO5B,CAAC;IANG,IAAI,KAAK;QACL,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;YAC9C,OAAO,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC;QACjD,CAAC,EAAE,CAAC,CAAC;QACL,OAAO,MAAM,CAAC;IAClB,CAAC;CACJ;;;;;;;;;;;;;;;ACpBM,MAAM,KAAK;IASd,KAAK;IAEL,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;;;IECG,qEAA2C;IACzC,qEAAI;IACF,oEAA2F;IAC7F,4DAAK;IACL,qEAAI;IAAA,uDAAgB;IAAA,4DAAK;IACzB,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC5B,qEAAI;IAAA,uDAAiC;;IAAA,4DAAK;IAC1C,sEAAI;IAAA,wDAAgD;;IAAA,4DAAK;IAC3D,4DAAK;;;IANI,0DAA4B;IAA5B,qKAA4B;IAAC,yFAAsB;IAEtD,0DAAgB;IAAhB,8EAAgB;IAChB,0DAAmB;IAAnB,iFAAmB;IACnB,0DAAiC;IAAjC,sJAAiC;IACjC,0DAAgD;IAAhD,0KAAgD;;ADXnD,MAAM,QAAQ;IACnB,YAAmB,KAAY;QAAZ,UAAK,GAAL,KAAK,CAAO;IAC/B,CAAC;;gEAFU,QAAQ;sGAAR,QAAQ;QCTrB,qEAAI;QAAA,wEAAa;QAAA,4DAAK;QACtB,sEAAK;QAAA,uDAAsC;QAAA,4DAAM;QACjD,2EAAmD;QACjD,wEAAO;QACL,qEAAI;QACF,gEAAS;QACT,qEAAI;QAAA,gEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QACjB,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QAChB,4DAAK;QACP,4DAAQ;QACR,yEAAO;QACL,sGAQK;QACP,4DAAQ;QACR,yEAAO;QACL,sEAAI;QACF,yEAAmC;QAAA,iEAAK;QAAA,4DAAK;QAC7C,sEAAI;QAAA,wDAAyC;;QAAA,4DAAK;QACpD,4DAAK;QACP,4DAAQ;QAEV,4DAAQ;;QA7BH,0DAAsC;QAAtC,6GAAsC;QAYlB,2DAAoB;QAApB,0FAAoB;QAanC,0DAAyC;QAAzC,+JAAyC;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBiC;AACR;;;;;;;;;;;;AAYrE,MAAM,uBAAuB;IAEhC,YAA4C,IAAW,EAC5C,SAAgD,EAC/C,GAAsB;QAFU,SAAI,GAAJ,IAAI,CAAO;QAC5C,cAAS,GAAT,SAAS,CAAuC;QAC/C,QAAG,GAAH,GAAG,CAAmB;QAQlC,SAAI,GAAc,IAAI,qDAAS,CAAC;YAC5B,UAAU,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,+DAAmB,CAAC;YACpD,EAAE,EAAE,IAAI,uDAAW,CAAC,EAAE,CAAC;YACvB,YAAY,EAAE,IAAI,uDAAW,CAAC,EAAE,CAAC;YACjC,UAAU,EAAE,IAAI,uDAAW,CAAC,EAAE,CAAC;SAGlC,CAAC,CAAC;IAdH,CAAC;IAgBD,mBAAmB;IACnB,CAAC;IAED,QAAQ;QAEJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACjC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC7B,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAE5B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,EAAE;YAClC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;QAC5B,CAAC,CAAC;IAIN,CAAC;IAED,WAAW;QAEP,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAE5B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,EAAE;YAClC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;QAC5B,CAAC,CAAC;IAEN,CAAC;IAED,OAAO;IAEP,CAAC;IAED,QAAQ;QACJ,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;SAEpB;IACL,CAAC;IAED,OAAO;QACH,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;;8FA5DQ,uBAAuB,kEAEZ,qEAAe;qHAF1B,uBAAuB;;;;;;QCdpC,8EAAa;QACX,uEAAM;QAAA,yEAAQ;QAAC,uDAAa;QAAA,4DAAS;QAAC,4DAAO;QAC7C,qEAA0C;QAC5C,4DAAc;QAEd,0EAAmE;QAAtB,+IAAU,cAAU,IAAC;QAChE,mFAA0C;QACxC,gFAAe;QAEb,yEAAiC;QAE1B,qEAAI;QAAC,0EAAQ;QAAA,yEAAa;QAAA,4DAAS;QAAA,4DAAK;QAC3C,sFAA8C;QAC5C,uFAA4B;QAAA,+FAAmC;QAAA,4DAAmB;QAClF,uFAA4B;QAAA,8FAAkC;QAAA,4DAAmB;QACjF,uFAA4B;QAAA,kGAAsC;QAAA,4DAAmB;QACrF,uFAA4B;QAAA,mGAAuC;QAAA,4DAAmB;QACxF,4DAAkB;QAGpB,0EAAgC;QAC5B,sEAAI;QAAA,0EAAQ;QAAA,iFAAqB;QAAA,4DAAS;QAAA,4DAAK;QAC/C,sEAAI;QACH,sEAAI;QAAA,oFAAmC;QAAA,2EAAyB;QAAA,4DAAe;QAAA,4DAAK;QACnF,sEAAI;QAAA,oFAAmC;QAAA,mFAAgC;QAAA,4DAAe;QAAA,4DAAK;QAC5F,sEAAI;QAAA,oFAAmC;QAAA,kFAA8B;QAAA,4DAAe;QAAA,4DAAK;QAC1F,4DAAK;QACT,4DAAM;QAEJ,2EAAyB;QAAA,sEAAI;QAAA,wDAAiC;;QAAA,4DAAK;QAAA,4DAAM;QAE3E,2EAAwB;QACtB,8EAAkF;QAAA,kEAAM;QAAA,4DAAS;QACjG,8EAA2D;QAApB,gJAAS,aAAS,IAAC;QAAC,iEAAK;QAAA,4DAAS;QAC3E,4DAAM;QACR,4DAAM;QACR,4DAAgB;QAClB,4DAAgB;QAClB,4DAAO;;QArCU,0DAAa;QAAb,wFAAa;QAIxB,0DAAkB;QAAlB,+EAAkB;QAwBe,2DAAiC;QAAjC,mKAAiC;QAGN,0DAAyB;QAAzB,sFAAyB;;;;;;;;;;;;;;;;;;;;;AC9BrB;AACA;;;;;;;ICFlE,yEAAqD;IACjD,yEAAyC;IACrC,oEAA8E;IAC9E,qEAAI;IAAA,uDAAW;IAAA,4DAAK;IACpB,wEAA2B;IACvB,qEAAI;IAAA,uDAAmC;;IAAA,4DAAK;IAC5C,qEAAI;IAAA,wDAAyB;IAAA,4DAAK;IAClC,sEAAI;IAAA,wDAAgB;IAAA,4DAAK;IACzB,sEAAI;IAAA,wDAA8B;IAAA,4DAAK;IAC3C,4DAAK;IACL,6EAA6E;IAA9B,oVAAS,6BAAmB,IAAC;IAAC,+DAAG;IAAA,4DAAS;IACzF,6EAA4E;IAAzB,oVAAS,wBAAc,IAAC;IAAC,qEAAS;IAAA,4DAAS;IAClG,4DAAM;IACV,4DAAM;;;IAXO,0DAAuB;IAAvB,kKAAuB;IAAiC,mFAAc;IACvE,0DAAW;IAAX,2EAAW;IAEP,0DAAmC;IAAnC,mKAAmC;IACnC,0DAAyB;IAAzB,kGAAyB;IACzB,0DAAgB;IAAhB,yFAAgB;IAChB,0DAA8B;IAA9B,uGAA8B;;ADJlD,2DAA2D;AAQ5C,MAAM,aAAa;IAG9B,YAAmB,KAAY,EAAU,MAAiB;QAAvC,UAAK,GAAL,KAAK,CAAO;QAAU,WAAM,GAAN,MAAM,CAAW;IAE1D,CAAC;IACD,QAAQ;QACJ,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,WAAW,CAAC,KAAY;QACpB,MAAM,YAAY,GAAG,IAAI,qEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;QAC3B,YAAY,CAAC,IAAI,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+EAAuB,EAAE,YAAY,CAAC;IAE3D,CAAC;;0EAlBgB,aAAa;2GAAb,aAAa;QCblC,yEAAiB;QACb,2GAaM;QACV,4DAAM;;QAdiB,0DAAe;QAAf,qFAAe;;;;;;;;;;;;;;;;ACDtC,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAGD,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/store.service.ts","./src/app/shared/Order.ts","./src/app/shared/Pizza.ts","./src/app/views/CartView.ts","./src/app/views/cartView.html","./src/app/views/customize-pizza.component.ts","./src/app/views/customize-pizza.component.html","./src/app/views/pizzaListView.component.ts","./src/app/views/pizzaListView.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl:\"app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  title = 'Shop';\n}\n","<div class=\"row\">\r\n    <div class=\"col-9\">\r\n        <h3>{{title}}</h3>\r\n        <pizza-list></pizza-list>\r\n    </div>\r\n<div class=\"col-3\">\r\n   <cart></cart>\r\n</div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { Store } from './services/store.service';\r\nimport PizzaListView from './views/pizzaListView.component';\r\nimport { HttpClientModule } from \"@angular/common/http\"\r\nimport { CartView } from './views/CartView';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox'\r\nimport { CustomizePizzaComponent } from './views/customize-pizza.component';\r\nimport { MatButtonModule } from '@angular/material/button'\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\n@NgModule({\n    declarations: [     \n        AppComponent,\n        PizzaListView,\n        CartView,\n        CustomizePizzaComponent\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      ReactiveFormsModule,\n      NgbModule,\n      MatDialogModule,\n      MatGridListModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatRadioModule,\n      MatCheckboxModule,\n      MatButtonModule,\n      BrowserAnimationsModule\n  ],\n  providers: [Store],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Order, OrderItem } from \"../shared/Order\";\r\nimport { Pizza } from \"../shared/Pizza\";\r\n\r\n@Injectable()\r\nexport class Store {\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n    //public products = [{ title: \"Van Gogh\", price: \"19.99\" },\r\n    //    { title: \"Van Gogh Post\", price: \"19.99\" }];\r\n    public pizzas: Pizza[] = [];\r\n    public order: Order = new Order();\r\n\r\n    loadPizzas():Observable<void> {\r\n        return this.http.get<[]>(\"/api/pizza\")\r\n            .pipe(map(data => {\r\n            this.pizzas = data;\r\n            return;\r\n        }));\r\n    \r\n    }\r\n\r\n    addToOrder(pizza: Pizza) {\r\n        \r\n        let item = this.order.items.find(o => o.id === pizza.id);\r\n        if (item) {\r\n            item.quantity++;\r\n        } else {\r\n            const newItem = new OrderItem();\r\n            newItem.id = pizza.id;\r\n            newItem.title = pizza.title;\r\n            newItem.category = pizza.category;\r\n            newItem.price = pizza.price;\r\n            newItem.quantity = 1;\r\n            this.order.items.push(newItem);\r\n        }\r\n      \r\n      \r\n    }\r\n\r\n}\r\n\r\n","export class OrderItem {\r\n    id: number | undefined ;\r\n    quantity: number ;\r\n    price: number ;\r\n    category: string | undefined;\r\n    size: string | undefined;\r\n    title: string | undefined;\r\n}\r\n\r\nexport class Order {\r\n    orderId: number | undefined;\r\n    orderDate: Date;\r\n    orderNumber: string;\r\n    items: OrderItem[] = [];\r\n    get total(): number {\r\n        const result = this.items.reduce((total, value) => {\r\n            return total + (value.price * value.quantity)\r\n        }, 0)\r\n        return result;\r\n    }\r\n}\r\n","export class Pizza {\r\n\r\n    id: number | undefined;\r\n    category: string | undefined;\r\n    size: string | undefined;\r\n    price: number ;\r\n    title: string | undefined;\r\n    ingredients: string | undefined;\r\n\r\n    Pizza() {\r\n\r\n    }\r\n}","import { Component } from \"@angular/core\";\r\nimport { Store } from \"../services/store.service\";\r\n\r\n\r\n@Component({\r\n  selector: \"cart\",\r\n  templateUrl: \"cartView.html\",\r\n  styleUrls: [ \"cartView.scss\" ]\r\n})\r\nexport class CartView {\r\n  constructor(public store: Store) {\r\n  }\r\n}\r\n","<h3>Shopping Cart</h3>\r\n<div>Count:  {{ store.order.items.length }}</div>\r\n<table class=\"table table-condensed table-striped\">\r\n  <thead>\r\n    <tr>\r\n      <td></td>\r\n      <td>Pizza</td>\r\n      <td>Quantity</td>\r\n      <td>Price</td>\r\n      <td>Total</td>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let item of store.order.items\">\r\n      <td>\r\n        <img src=\"/img/{{ item.id }}.jpg\" alt=\"{{ item.title }}\" class=\"img-fluid product-thumb\" />\r\n      </td>\r\n      <td>{{ item.title }}</td>\r\n      <td>{{ item.quantity }}</td>\r\n      <td>{{ item.price | currency:\"INR\" }}</td>\r\n      <td>{{ item.quantity * item.price | currency:\"INR\"}}</td>\r\n    </tr>\r\n  </tbody>\r\n  <tfoot>\r\n    <tr>\r\n      <td colspan=\"4\" class=\"text-right\">Total</td>\r\n      <td>{{ store.order.total | currency :\"INR\" }}</td>\r\n    </tr>\r\n  </tfoot>\r\n\r\n</table>\r\n\r\n\r\n","import { ChangeDetectorRef, Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormGroup, FormControl, Validators, NgForm } from \"@angular/forms\";\r\nimport { Pizza } from '../shared/Pizza';\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'customize-pizza',\r\n    templateUrl: './customize-pizza.component.html',\r\n    styleUrls: ['./customize-pizza.component.scss']\r\n})\r\nexport class CustomizePizzaComponent implements OnInit {\r\n\r\n    constructor(@Inject(MAT_DIALOG_DATA) public data: Pizza,\r\n        public dialogRef: MatDialogRef<CustomizePizzaComponent>,\r\n        private cdr: ChangeDetectorRef    ) {\r\n    }\r\n\r\n    @ViewChild('form', { static: true }) ngForm: NgForm;\r\n\r\n    public pizzaname: any;\r\n    public total: number;\r\n\r\n    form: FormGroup = new FormGroup({ \r\n        cheeseType: new FormControl('', Validators.required),\r\n        35: new FormControl(''),\r\n        americanCorn: new FormControl(''),\r\n        blackOlive: new FormControl('')\r\n\r\n\r\n    });\r\n\r\n    initializeFormGroup() {\r\n    }\r\n\r\n    ngOnInit() {\r\n      \r\n        this.pizzaname = this.data.title;\r\n        this.total = this.data.price;\r\n        let g = this.form.get('35');\r\n\r\n        this.form.valueChanges.subscribe(() => {\r\n            this.cdr.detectChanges()\r\n        })\r\n\r\n       \r\n     \r\n    }\r\n\r\n    ngOnChanges() {\r\n\r\n        let g = this.form.get('35');\r\n\r\n        this.form.valueChanges.subscribe(() => {\r\n            this.cdr.detectChanges()\r\n        })\r\n\r\n    }\r\n\r\n    onClear() {\r\n    \r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.form.valid) {\r\n          \r\n        }\r\n    }\r\n\r\n    onClose() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n   \r\n\r\n    //populateForm(employee) {\r\n    //    this.form.setValue(_.omit(employee, 'departmentName'));\r\n    //}\r\n\r\n}","<mat-toolbar>\r\n  <span><strong> {{pizzaname}}</strong> </span>\r\n  <span class=\"fill-remaining-space\"></span> \r\n</mat-toolbar>\r\n\r\n<form [formGroup]=\"form\" class=\"normal-form\" (submit)=\"onSubmit()\">\r\n  <mat-grid-list cols=\"1\" rowHeight=\"300px\">\r\n    <mat-grid-tile>\r\n      \r\n      <div class=\"controles-container\">\r\n      \r\n             <h6> <strong>Select Cheese</strong></h6>\r\n          <mat-radio-group formControlName=\"cheeseType\">\r\n            <mat-radio-button value=\"1\">Peri Peri Cheese(Tangy Spicy Taste)</mat-radio-button>\r\n            <mat-radio-button value=\"2\">Chipotle Cheese(Smokey Spic Taste)</mat-radio-button>\r\n            <mat-radio-button value=\"3\">Tandoori Cheese(Tandoori Masala Taste)</mat-radio-button>\r\n            <mat-radio-button value=\"4\">El Classico Cheese (Regular Mozzarella)</mat-radio-button>\r\n          </mat-radio-group>\r\n      \r\n          \r\n        <div class=\"add-bottom-padding\">\r\n            <h6><strong>Select Extra Toppings</strong></h6>\r\n            <ul>\r\n             <li><mat-checkbox formControlName=\"29\">Onion         &#x20b9; 29</mat-checkbox></li>\r\n              <li><mat-checkbox formControlName=\"35\">American Corn        &#x20b9; 35</mat-checkbox></li>\r\n             <li><mat-checkbox formControlName=\"55\">Black Olives       &#x20b9; 55</mat-checkbox></li>  \r\n            </ul>\r\n        </div>\r\n\r\n          <div class = \"sub-total\"><h5>Total:  {{total |currency:\"INR\"}}</h5></div>\r\n             \r\n        <div class=\"button-row\">\r\n          <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"form.invalid\">Submit</button>\r\n          <button mat-raised-button color=\"warn\" (click)=\"onClose()\">Close</button>\r\n        </div>\r\n      </div>\r\n    </mat-grid-tile>\r\n  </mat-grid-list>\r\n</form>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Store } from \"../services/store.service\";\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { CustomizePizzaComponent } from \"./customize-pizza.component\";\r\nimport { Pizza } from \"../shared/Pizza\";\r\n/*import { MatToolBar } from \"@angular/material/toolbar\";*/\r\n\r\n@Component({\r\n    selector: \"pizza-list\",\r\n    templateUrl: \"pizzaListView.component.html\",\r\n    styleUrls: [\"pizzaListView.component.scss\"]\r\n\r\n})\r\nexport default class PizzaListView implements OnInit{\r\n \r\n\r\n    constructor(public store: Store, private dialog: MatDialog) {\r\n      \r\n    }\r\n    ngOnInit() {\r\n        this.store.loadPizzas().subscribe(() => { });  \r\n    }\r\n\r\n    onCustomise(pizza: Pizza) {\r\n        const dialogConfig = new MatDialogConfig();\r\n        dialogConfig.disableClose = true;\r\n        dialogConfig.autoFocus = true;\r\n        dialogConfig.width = \"40%\";\r\n        dialogConfig.data = pizza;\r\n        this.dialog.open(CustomizePizzaComponent, dialogConfig)\r\n\r\n    }\r\n}","<div class=\"row\">\r\n    <div *ngFor=\"let p of store.pizzas\" class=\"col-md-4\">\r\n        <div class=\"border bg-light rounded p-1\">\r\n            <img src=\"/img/{{p.id}}.jpg\" class=\"img-fluid product-image\" alt=\"{{p.id}}\" />\r\n            <h5>{{p.title}}</h5>\r\n            <ul class=\"products-props\">\r\n                <li>Price: {{p.price | currency:\"INR\"}}</li>\r\n                <li>Category: {{p.category}} </li>\r\n                <li>Size: {{p.size}}</li>\r\n                <li>Ingredients: {{p.ingredients}}</li>\r\n            </ul>\r\n            <button id=\"buyButton\" class=\"btn btn-success\" (click)=\"store.addToOrder(p)\">Buy</button>\r\n            <button id=\"customiseButton\" class=\"btn btn-light\" (click)=\"onCustomise(p)\">Customise</button>\r\n        </div>\r\n    </div>\r\n</div>     ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}